/**
 *    Copyright 2022-2023 authID.ai (Ipsidy, Inc.)
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at

 *       http://www.apache.org/licenses/LICENSE-2.0

 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

import React, { useState, useLayoutEffect, useRef } from 'react';
import PropTypes from 'prop-types';

import '@authid/web-component';

const AuthIDComponent = ({
    url, target, webauth, control,
}) => {
    const authid = useRef(null);
    const [loaded, setLoaded] = useState(false);
    useLayoutEffect(() => {
        const { current } = authid;

        const handler = () => {
            setLoaded(true);
        };
        current.addEventListener('load', handler, { capture: true, once: true });
        return () => {
            current.removeEventListener('load', handler);
        };
    }, []);
    useLayoutEffect(() => {
        const { authidControlFace } = window;

        if (loaded && control && authidControlFace) {
            authidControlFace.on('message', control);

            return () => {
                authidControlFace.off('message', control);
            };
        }

        return undefined;
    }, [loaded, control]);
    return React.createElement(
        'div',
        null,
        React.createElement(
            'authid-component',
            {
                ref: authid,
                'data-url': url,
                'data-target': target,
                'data-webauth': webauth,
                'data-control': !!control,
            }));
};
AuthIDComponent.propTypes = {
    url: PropTypes.string.isRequired,
    target: PropTypes.string,
    webauth: PropTypes.bool,
    control: PropTypes.func,
};
AuthIDComponent.defaultProps = {
    target: 'auto',
    webauth: false,
    control: null,
};

export default AuthIDComponent;
